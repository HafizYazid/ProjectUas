/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.itenas.is.oop.uasproject.gymproject.dbviewswing;

import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.itenas.is.oop.uasproject.gymproject.model.PenggunaGym;
import org.itenas.is.oop.uasproject.gymproject.model.MenuGym;
import org.itenas.is.oop.uasproject.gymproject.dbImplgym.PenggunaGymCRUD;
import org.itenas.is.oop.uasproject.gymproject.dbImplgym.MenuRU;
import org.itenas.is.oop.uasproject.gymproject.dbconfig.ConnectionManager;

/**
 *
 * @author Hafiz Yazid
 */
public class ViewApp extends javax.swing.JFrame {
    PenggunaGymCRUD conData = new PenggunaGymCRUD(new ConnectionManager()); 
    MenuRU conMenu = new MenuRU(new ConnectionManager());
    private DefaultTableModel model;
    
    public ViewApp() {
        initComponents();
        setLocationRelativeTo(null);
        model = new DefaultTableModel();
        
        dataAnggota.setModel(model);
        
        model.addColumn("ID");
        model.addColumn("NAMA");
        model.addColumn("NO HP");
        model.addColumn("KATEGORI");
        model.addColumn("TANGGAL MASUK");
        model.addColumn("DURASI");
        model.addColumn("EXPIRED");
        model.addColumn("STATUS");
        model.addColumn("TOTAL BIAYA");
        getData();
    }
    
    public final void getData() {
        DefaultTableModel dtm = (DefaultTableModel) dataAnggota.getModel();
        dtm.setRowCount(0);
        List<PenggunaGym> listData = conData.findAll();
        Object[] data = new Object[9];

        for (PenggunaGym dataPengguna : listData) {
            data[0] = dataPengguna.getIdPengguna();
            data[1] = dataPengguna.getNamaPengguna();
            data[2] = dataPengguna.getNomorPengguna();
            data[3] = dataPengguna.getIdKategori().getJenisPengunjung();
            data[4] = dataPengguna.getTanggalMasuk();
            data[5] = dataPengguna.getDurasi();
            data[6] = dataPengguna.getTanggalBerakhir();
            data[7] = dataPengguna.getStatus();
            data[8] = dataPengguna.getTotalBiaya();
            dtm.addRow(data);
        }
    }
    
     public final void getOneData() {
         String id = txtSearching.getText().trim();

        if (id.isEmpty()) {
            getData();
            return;
        }

        PenggunaGym penggunaGym = conData.findOne(id);

        if (penggunaGym != null) {
   
            DefaultTableModel dtm = (DefaultTableModel) dataAnggota.getModel();
            dtm.setRowCount(0); 
            
            Object[] data = new Object[9];
            
            data[0] = penggunaGym.getIdPengguna();
            data[1] = penggunaGym.getNamaPengguna();
            data[2] = penggunaGym.getNomorPengguna();
            data[3] = penggunaGym.getIdKategori().getJenisPengunjung();
            data[4] = penggunaGym.getTanggalMasuk();
            data[5] = penggunaGym.getDurasi();
            data[6] = penggunaGym.getTanggalBerakhir();
            data[7] = penggunaGym.getStatus();
            data[8] = penggunaGym.getTotalBiaya();
            dtm.addRow(data);
        } else {
            JOptionPane.showMessageDialog(txtSearching, "Data dengan ID " + id + " tidak ditemukan.",
                "Peringatan", JOptionPane.WARNING_MESSAGE);

            DefaultTableModel dtm = (DefaultTableModel) dataAnggota.getModel();
            dtm.setRowCount(0); // Bersihkan tabel jika tidak ada data ditemukan
                }
    }
    

    
    private void clearData() {
        txtNama.setText("");
        txtNohp.setText("");
        txtDurasi.setText("");
        txtTglMasuk.setText("");
        txtSearching.setText("");
        txtTotalBiaya.setText("");
        txtNama.setEditable(true);
        txtNohp.setEditable(true);
        txtDurasi.setEditable(true);
        txtTglMasuk.setEditable(true);
        txtSearching.setEditable(true);
        txtTotalBiaya.setEditable(true);
    }
    
   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataAnggota = new javax.swing.JTable();
        btnDeleted = new rojerusan.RSMaterialButtonRectangle();
        btnSubmited = new rojerusan.RSMaterialButtonRectangle();
        btnUpdated = new rojerusan.RSMaterialButtonRectangle();
        btnCleared = new rojerusan.RSMaterialButtonRectangle();
        jLabel1 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        labelnama = new javax.swing.JLabel();
        txtNohp = new javax.swing.JTextField();
        labelharga = new javax.swing.JLabel();
        txtSearching = new javax.swing.JTextField();
        pilihKategori = new javax.swing.JComboBox<>();
        txtTglMasuk = new javax.swing.JTextField();
        labeltglmasuk = new javax.swing.JLabel();
        labeltglmasuk1 = new javax.swing.JLabel();
        txtDurasi = new javax.swing.JTextField();
        txtTotalBiaya = new javax.swing.JTextField();
        btnCalculate = new rojerusan.RSMaterialButtonRectangle();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        dataAnggota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NAMA", "NO HP", "KATEGORI", "TANGGAL MASUK", "DURASI", "EXPIRED", "STATUS", "TOTAL BIAYA"
            }
        ));
        dataAnggota.setGridColor(new java.awt.Color(153, 153, 153));
        dataAnggota.setShowGrid(true);
        dataAnggota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataAnggotaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataAnggota);
        if (dataAnggota.getColumnModel().getColumnCount() > 0) {
            dataAnggota.getColumnModel().getColumn(0).setResizable(false);
            dataAnggota.getColumnModel().getColumn(1).setResizable(false);
        }

        btnDeleted.setBackground(new java.awt.Color(255, 51, 51));
        btnDeleted.setText("DELETE");
        btnDeleted.setFont(new java.awt.Font("Roboto Medium", 0, 10)); // NOI18N
        btnDeleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletedActionPerformed(evt);
            }
        });

        btnSubmited.setText("CREATE");
        btnSubmited.setFont(new java.awt.Font("Roboto Medium", 0, 10)); // NOI18N
        btnSubmited.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitedActionPerformed(evt);
            }
        });

        btnUpdated.setBackground(new java.awt.Color(255, 204, 0));
        btnUpdated.setText("UPDATE");
        btnUpdated.setFont(new java.awt.Font("Roboto Medium", 0, 10)); // NOI18N
        btnUpdated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatedActionPerformed(evt);
            }
        });

        btnCleared.setBackground(new java.awt.Color(102, 255, 102));
        btnCleared.setText("Clear");
        btnCleared.setFont(new java.awt.Font("Roboto Medium", 0, 10)); // NOI18N
        btnCleared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearedActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Data Keanggotaan");

        txtNama.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });

        labelnama.setText("Nama");

        txtNohp.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        txtNohp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNohpActionPerformed(evt);
            }
        });

        labelharga.setText("Nomor Telepon");

        txtSearching.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchingKeyReleased(evt);
            }
        });

        pilihKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VISITOR", "MEMBER" }));
        pilihKategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pilihKategoriMouseClicked(evt);
            }
        });
        pilihKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilihKategoriActionPerformed(evt);
            }
        });

        txtTglMasuk.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        txtTglMasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglMasukActionPerformed(evt);
            }
        });

        labeltglmasuk.setText("Tanggal Masuk");

        labeltglmasuk1.setText("Durasi");

        txtDurasi.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));
        txtDurasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDurasiActionPerformed(evt);
            }
        });

        txtTotalBiaya.setEditable(false);
        txtTotalBiaya.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtTotalBiaya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalBiayaActionPerformed(evt);
            }
        });

        btnCalculate.setText("CALCULATE");
        btnCalculate.setFont(new java.awt.Font("Roboto Medium", 0, 10)); // NOI18N
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelnama)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labeltglmasuk1)
                                    .addComponent(txtDurasi, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNohp, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelharga))
                                .addGap(80, 80, 80)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labeltglmasuk)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnSubmited, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnDeleted, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCleared, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtTglMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearching, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pilihKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(510, 510, 510))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelnama)
                            .addComponent(labeltglmasuk1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDurasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalBiaya, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelharga)
                    .addComponent(labeltglmasuk)
                    .addComponent(pilihKategori, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNohp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTglMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmited, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleted, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCleared, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearching, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNohpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNohpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNohpActionPerformed

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void btnClearedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearedActionPerformed
        // TODO add your handling code here:
        getData();
        clearData();
    }//GEN-LAST:event_btnClearedActionPerformed

    private void btnUpdatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatedActionPerformed
        // TODO add your handling code here:
                                        
    int i = dataAnggota.getSelectedRow();

    if (i == -1) {
        JOptionPane.showMessageDialog(btnUpdated, "Harap pilih salah satu data",
            "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Ambil ID Pengguna dari tabel
        String idPengguna = dataAnggota.getModel().getValueAt(i, 0).toString();
        String oldNama = dataAnggota.getModel().getValueAt(i, 1).toString();

        // Dapatkan kategori dari metode getSelectedKategori
        MenuGym selectedMenu = getSelectedKategori();
        if (selectedMenu == null) {
            JOptionPane.showMessageDialog(btnUpdated, "Harap pilih kategori yang valid",
                "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi dan parsing input
        String namaPengguna = txtNama.getText().trim();
        String nomorPengguna = txtNohp.getText().trim();
        String tglMasuk = txtTglMasuk.getText().trim();
        String durasiStr = txtDurasi.getText().trim();

        if (namaPengguna.isEmpty() || nomorPengguna.isEmpty() || tglMasuk.isEmpty() || durasiStr.isEmpty()) {
            JOptionPane.showMessageDialog(btnUpdated, "Semua input harus diisi.",
                "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        LocalDate tanggalMasuk;
        try {
            tanggalMasuk = LocalDate.parse(tglMasuk); // Parsing tanggal
        } catch (Exception e) {
            JOptionPane.showMessageDialog(btnUpdated, "Format tanggal tidak valid. Gunakan format YYYY-MM-DD.",
                "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int durasi;
        try {
            durasi = Integer.parseInt(durasiStr); // Parsing durasi
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(btnUpdated, "Durasi harus berupa angka.",
                "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Isi data pengguna untuk update
        PenggunaGym updateData = new PenggunaGym();
        updateData.setNamaPengguna(namaPengguna);
        updateData.setNomorPengguna(nomorPengguna);
        updateData.setIdKategori(selectedMenu);
        updateData.setTanggalMasuk(tanggalMasuk);
        updateData.setDurasi(durasi);

        // Update data di database
        conData.update(idPengguna, updateData);

        // Beri notifikasi berhasil
        JOptionPane.showMessageDialog(btnUpdated, "Data berhasil diUpdate");
        getData(); // Refresh tabel
        clearData(); // Kosongkan inputan
    } catch (Exception e) {
        JOptionPane.showMessageDialog(btnUpdated, "Error: " + e.getMessage(),
            "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdatedActionPerformed

        private void loadKategoriToComboBox() {
            try {
                List<MenuGym> kategoriList = conMenu.findAll(); 
                pilihKategori.removeAllItems();

                
                for (MenuGym menu : kategoriList) {
                    pilihKategori.addItem(menu.getJenisPengunjung()); 
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error memuat kategori: " + e.getMessage());
            }
        }

        private MenuGym getSelectedKategori() {
            String selectedKategori = pilihKategori.getSelectedItem().toString(); 
            for (MenuGym menu : conMenu.findAll()) {
                if (menu.getJenisPengunjung().equals(selectedKategori)) {
                    return menu; 
                }
            }
            return null; 
        }

    
    private void btnSubmitedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitedActionPerformed
        // TODO add your handling code here:
           try {
        int response = JOptionPane.showConfirmDialog(this, "Apakah Anda sudah membayar?", 
                                                     "Konfirmasi Pembayaran", JOptionPane.YES_NO_OPTION);

        if (response == JOptionPane.YES_OPTION) {
            
        PenggunaGym pengguna = new PenggunaGym();

        pengguna.setNamaPengguna(txtNama.getText());  
        pengguna.setNomorPengguna(txtNohp.getText());  
        
        MenuGym selectedMenu = getSelectedKategori();  
        if (selectedMenu != null) {
            pengguna.setIdKategori(selectedMenu); 
        } else {
            JOptionPane.showMessageDialog(this, "Kategori tidak dipilih!");
            return; 
        }

        String tglMasuk = txtTglMasuk.getText();
        try {
            pengguna.setTanggalMasuk(LocalDate.parse(tglMasuk)); 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Format tanggal salah, harap masukkan dalam format yyyy-MM-dd");
            return;  
        }
        try {
            pengguna.setDurasi(Integer.parseInt(txtDurasi.getText())); 
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Durasi harus berupa angka");
            return;  
        }

        conData.create(pengguna);  
        JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan","Pesan", JOptionPane.INFORMATION_MESSAGE);
        getData();  
        clearData();  
        
        } else {
            JOptionPane.showMessageDialog(this, "Proses dibatalkan", "Batal", JOptionPane.INFORMATION_MESSAGE);
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Pesan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitedActionPerformed

    private void btnDeletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletedActionPerformed
        // TODO add your handling code here:
        int i = dataAnggota.getSelectedRow();

        if (i == -1) {
            JOptionPane.showMessageDialog(btnDeleted, "Harap pilih salah satu data",
                "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int id = Integer.parseInt(dataAnggota.getModel().
            getValueAt(i, 0).toString());

        conData.delete(id);
        JOptionPane.showMessageDialog(btnDeleted, "Data berhasil diHapus");
        getData();
        clearData();
    }//GEN-LAST:event_btnDeletedActionPerformed

    private void dataAnggotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataAnggotaMouseClicked
        // TODO add your handling code here:
        int i = dataAnggota.getSelectedRow();

        TableModel model = dataAnggota.getModel();
        txtNama.setText(model.getValueAt(i, 1).toString());
        txtNohp.setText(model.getValueAt(i, 2).toString());
        pilihKategori.setSelectedItem(model.getValueAt(i, 3).toString());
        txtTglMasuk.setText(model.getValueAt(i, 4).toString());
        txtDurasi.setText(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_dataAnggotaMouseClicked

    private void txtTglMasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglMasukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglMasukActionPerformed

    private void pilihKategoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pilihKategoriMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_pilihKategoriMouseClicked

    private void pilihKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihKategoriActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_pilihKategoriActionPerformed

    private void txtDurasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDurasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDurasiActionPerformed

    private void txtSearchingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchingKeyReleased
        // TODO add your handling code here:                                         
        getOneData();

    }//GEN-LAST:event_txtSearchingKeyReleased

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        PenggunaGym calculate = new PenggunaGym();
    try {
        calculate.setDurasi(Integer.parseInt(txtDurasi.getText())); 

        MenuGym selectedMenu = getSelectedKategori();  
        if (selectedMenu != null) {
            calculate.setIdKategori(selectedMenu); 
        } else {
            JOptionPane.showMessageDialog(this, "Kategori tidak dipilih!");
            return; 
        }
        
        txtTotalBiaya.setText(String.valueOf("Rp " + calculate.totalBiaya()));
    } catch (Exception e) {
        JOptionPane.showMessageDialog(btnCalculate, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void txtTotalBiayaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalBiayaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalBiayaActionPerformed
    
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewApp().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle btnCalculate;
    private rojerusan.RSMaterialButtonRectangle btnCleared;
    private rojerusan.RSMaterialButtonRectangle btnDeleted;
    private rojerusan.RSMaterialButtonRectangle btnSubmited;
    private rojerusan.RSMaterialButtonRectangle btnUpdated;
    private javax.swing.JTable dataAnggota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelharga;
    private javax.swing.JLabel labelnama;
    private javax.swing.JLabel labeltglmasuk;
    private javax.swing.JLabel labeltglmasuk1;
    private javax.swing.JComboBox<String> pilihKategori;
    private javax.swing.JTextField txtDurasi;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNohp;
    private javax.swing.JTextField txtSearching;
    private javax.swing.JTextField txtTglMasuk;
    private javax.swing.JTextField txtTotalBiaya;
    // End of variables declaration//GEN-END:variables
}
